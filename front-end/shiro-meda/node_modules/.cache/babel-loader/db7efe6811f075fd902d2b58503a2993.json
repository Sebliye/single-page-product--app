{"ast":null,"code":"var _jsxFileName = \"B:\\\\education\\\\CS568 React js\\\\project\\\\single-page-product--app\\\\front-end\\\\shiro-meda\\\\src\\\\components\\\\comment\\\\comment.js\";\nimport React from 'react';\nimport CommentBox from './CommentBox';\nimport Aux from '../../hoc/Auxilary';\n\nclass Comment extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      products: [{\n        id: '1',\n        type: 'Kemis',\n        comments: [{\n          userId: 1,\n          text: 'comment from the krmis'\n        }],\n        rates: [{\n          userId: 1,\n          rate: 2\n        }]\n      }, {\n        id: '2',\n        type: 'shurt',\n        comments: [{\n          userId: 1,\n          text: 'comment from the array'\n        }],\n        rates: [{\n          userId: 3,\n          rate: 4\n        }]\n      }]\n    };\n\n    this.setComment = (pid, uid, comment) => {\n      const copyprd = [...this.state.products];\n      const index = copyprd.findIndex(p => p.id === pid);\n      const comments = [...copyprd[index].comments]; //.push({userId:uid, text:comment});     \n\n      console.log(tycomments); //     this.setState({products:copyprd});\n      //     console.log(this.state.products);\n    };\n  }\n\n  render() {\n    this.setComment('1', 3, \"check\");\n    return /*#__PURE__*/React.createElement(Aux, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 1\n      }\n    }, /*#__PURE__*/React.createElement(CommentBox, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 6\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 6\n      }\n    }, \"seble component comment list\"));\n  }\n\n}\n\nexport default Comment;","map":{"version":3,"sources":["B:/education/CS568 React js/project/single-page-product--app/front-end/shiro-meda/src/components/comment/comment.js"],"names":["React","CommentBox","Aux","Comment","Component","state","products","id","type","comments","userId","text","rates","rate","setComment","pid","uid","comment","copyprd","index","findIndex","p","console","log","tycomments","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,GAAP,MAAgB,oBAAhB;;AACA,MAAMC,OAAN,SAAsBH,KAAK,CAACI,SAA5B,CAAqC;AAAA;AAAA;AAAA,SAErCC,KAFqC,GAE/B;AACDC,MAAAA,QAAQ,EAAC,CACT;AAAEC,QAAAA,EAAE,EAAE,GAAN;AAAWC,QAAAA,IAAI,EAAE,OAAjB;AAA0BC,QAAAA,QAAQ,EAAC,CAAC;AAACC,UAAAA,MAAM,EAAC,CAAR;AAAWC,UAAAA,IAAI,EAAE;AAAjB,SAAD,CAAnC;AAAiFC,QAAAA,KAAK,EAAC,CAAC;AAACF,UAAAA,MAAM,EAAC,CAAR;AAAWG,UAAAA,IAAI,EAAE;AAAjB,SAAD;AAAvF,OADS,EAEb;AAAEN,QAAAA,EAAE,EAAE,GAAN;AAAWC,QAAAA,IAAI,EAAE,OAAjB;AAA0BC,QAAAA,QAAQ,EAAC,CAAC;AAACC,UAAAA,MAAM,EAAC,CAAR;AAAWC,UAAAA,IAAI,EAAE;AAAjB,SAAD,CAAnC;AAAiFC,QAAAA,KAAK,EAAC,CAAC;AAACF,UAAAA,MAAM,EAAC,CAAR;AAAWG,UAAAA,IAAI,EAAE;AAAjB,SAAD;AAAvF,OAFa;AADR,KAF+B;;AAAA,SASlCC,UATkC,GASrB,CAACC,GAAD,EAAKC,GAAL,EAASC,OAAT,KAAmB;AAC1B,YAAMC,OAAO,GAAG,CAAE,GAAG,KAAKb,KAAL,CAAWC,QAAhB,CAAhB;AACA,YAAMa,KAAK,GAAGD,OAAO,CAACE,SAAR,CAAkBC,CAAC,IAAGA,CAAC,CAACd,EAAF,KAASQ,GAA/B,CAAd;AACA,YAAMN,QAAQ,GAAG,CAAE,GAAGS,OAAO,CAACC,KAAD,CAAP,CAAeV,QAApB,CAAjB,CAH0B,CAGqB;;AAC9Ca,MAAAA,OAAO,CAACC,GAAR,CAAYC,UAAZ,EAJyB,CAM9B;AACA;AAED,KAlBiC;AAAA;;AAoBrCC,EAAAA,MAAM,GAAE;AAAC,SAAKX,UAAL,CAAgB,GAAhB,EAAoB,CAApB,EAAsB,OAAtB;AACT,wBACA,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACK,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADL,eAEK;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCAFL,CADA;AAOC;;AA5BoC;;AA8BrC,eAAeX,OAAf","sourcesContent":["import React from 'react';\r\nimport CommentBox from './CommentBox';\r\nimport Aux from '../../hoc/Auxilary';\r\nclass Comment extends React.Component{\r\n\r\nstate={\r\n     products:[\r\n     { id: '1', type: 'Kemis', comments:[{userId:1, text: 'comment from the krmis'}], rates:[{userId:1, rate: 2}]},\r\n\t{ id: '2', type: 'shurt', comments:[{userId:1, text: 'comment from the array'}], rates:[{userId:3, rate: 4}]}\r\n     ]\r\n}\r\n\r\n   setComment = (pid,uid,comment)=>{\r\n         const copyprd = [ ...this.state.products ];\r\n         const index = copyprd.findIndex(p=> p.id === pid );\r\n         const comments = [ ...copyprd[index].comments ]//.push({userId:uid, text:comment});     \r\n          console.log(tycomments);\r\n\r\n     //     this.setState({products:copyprd});\r\n     //     console.log(this.state.products);\r\n\r\n   }\r\n\r\nrender(){this.setComment('1',3,\"check\");\r\nreturn(\r\n<Aux>\r\n     <CommentBox />\r\n     <div>seble component comment list</div>\r\n</Aux>\r\n\r\n )\r\n}\r\n}\r\nexport default Comment;"]},"metadata":{},"sourceType":"module"}